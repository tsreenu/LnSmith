@model DigitalAppraiser.Models.ViewModels.CustomerLoanDataModel

@{
    ViewBag.Title = "CustomerLoanData";
    Layout = "~/Views/Shared/_AppraiserLayout.cshtml";
}


<style>
    .ui-jqgrid .ui-jqgrid-bdiv {
        overflow-x: hidden !important;
        overflow-y: auto !important;
    }

    .ui-jqgrid tr.ui-row-ltr td {
        text-align: center;
        border-right-width: 1px;
        border-right-color: inherit;
        border-right-style: solid;
    }
</style>
<style>
    nav {
        height: unset !important;
    }

    .nav {
        background: #fff;
        text-align: center;
        color: #fff;
        font-size: 1.5em;
        font-weight: bold;
    }

        .nav a.active, a:hover {
            background: #33719b;
            transition: .5s;
            text-decoration: none !important;
            color: #fff;
        }

    .nav-tabs .nav-link.active {
        background-color: #33719b;
        color: #fff;
    }

    .tab-content {
        background: #fff;
    }

    .form label {
        display: inline-block;
        text-align: right;
        float: left;
    }

    [class*="col-"] {
        padding: 0.5rem;
    }
</style>
<input type="hidden" id="hdnSelfCustomerDataList" value="@Json.Encode(Model.selfCustomerDataList)" />
<input type="hidden" id="hdnBankCustomerDataList" value="@Json.Encode(Model.bankCustomerDataList)" />
<div class="container-fluid">
    <div id="divMessage" style="display:none;text-align:center;" class="alert alert-success alert-dismissible col-4 offset-4">
        Selected loans deleted successfully.
    </div>
    <div class="form-group form-inline col-12">
        <label style="color:#fff" class="col-4 col-md-2 col-lg-2">From Date<span style="color:red">*</span></label> &nbsp;&nbsp;
        <input type="text" id="txtStartDate" class="form-control col-3 col-md-2 col-lg-2" onchange="FilterActive()" readonly/>
        &nbsp;&nbsp;
        <label style="color:#fff;margin-left: 0rem;" class="col-4 col-md-2 col-lg-2">To Date<span style="color:red">*</span></label> &nbsp;&nbsp;
        <input type="text" id="txtEndDate" class="form-control col-3 col-md-2 col-lg-2" onchange="FilterActive()" readonly/>
        &nbsp;&nbsp;
        <input type="button" id="btnFilter" class="btn btn-primary col-2 col-md-1 col-lg-1 offset-4 offset-lg-0 offset-md-0" onclick="FilterLoans()" value="Filter" disabled />
        &nbsp;
        <input type="button" id="btnFilterClear" class="btn btn-danger col-2 col-md-1 col-lg-1" onclick="ReloadData()" value="Clear" disabled/>
    </div>
    @*<table class="table-responsive">
            <tr>
                <td style="color:#fff">From Date<span style="color:red">*</span></td>
                <td> <input type="text" id="txtStartDate" class="form-control" onchange="FilterActive()" /></td>
                <td style="color:#fff">To Date</td>
                <td><input type="text" id="txtEndDate" class="form-control" onchange="FilterActive()" /></td>
                <td> <input type="button" id="btnFilter" class="btn btn-primary" onclick="FilterLoans()" value="Filter" disabled /></td>
                <td><input type="button" id="btnFilter" class="btn btn-danger" onclick="CleareFilters()" value="Clear" /></td>
            </tr>
        </table>*@
    <div class="col-12 col-sm-12 col-md-12 col-lg-12">
        <nav>
            <div class="nav nav-tabs nav-fill" id="nav-tab" role="tablist">
                @if (Model.IsSelfEnabled == true)
                {
                    <a class="nav-item nav-link active" onclick="CleareFilters()" id="nav-home-tab" data-toggle="tab" href="#nav-PawnBroker" role="tab" aria-controls="nav-home" aria-selected="true">Pawn Broker</a>
                }
                @if (Model.IsBankEnabled == true)
                {
                    <a class="nav-item nav-link" onclick="CleareFilters()" id="nav-profile-tab" data-toggle="tab" href="#nav-Banks" role="tab" aria-controls="nav-profile" aria-selected="false">Banks</a>
                }
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            @if (Model.IsSelfEnabled == true)
            {
                <div class="tab-pane fade show active" id="nav-PawnBroker" role="tabpanel" aria-labelledby="nav-home-tab">

                    <table id="gridCustomerDataSelf" class="table"></table>
                    <div id="divPagerSelf"> </div>
                    <div class="form-group offset-5 offset-sm-5 offset-md-5 offset-lg-5 col-6 col-sm-6 col-md-6 col-lg-6">
                        <button onclick="DeleteSelfRecords()" class="btn btn-danger">Delete</button>
                        <a href="@Url.Action("DownLoadExcel", "Apraiser", new { bankId = 1 })" class="btn btn-primary">Download</a>
                    </div>
                    @*<a href="@Url.Action("DownLoadExcel", "Apraiser", new { bankId = 1 })" class="btn btn-primary offset-6">Download</a>*@
                </div>
            }
            @if (Model.IsBankEnabled == true)
            {
                <div class="tab-pane fade" id="nav-Banks" role="tabpanel" aria-labelledby="nav-profile-tab">
                    @*<div class="offset-md-3 offset-lg-3">*@
                    <table id="gridCustomerDataBank" class="table" style="border-collapse:collapse"></table>
                    <div id="divPagerBank"> </div>

                    <div class="form-group offset-5 offset-sm-5 offset-md-5 offset-lg-5 col-6 col-sm-6 col-md-6 col-lg-6">
                        <button onclick="DeleteBankRecords()" class="btn btn-danger">Delete</button>
                        <a href="@Url.Action("DownLoadExcel", "Apraiser", new { bankId = 2 })" class="btn btn-primary">Download</a>
                    </div>

                    @*</div>*@

                </div>
            }

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#txtStartDate").datepicker({
            dateFormat: "dd-M-yy",
            showOn: "button",
            buttonImage: "/Content/Images/calendar.png",
        });
        $("#txtEndDate").datepicker({
            dateFormat: "dd-M-yy",
            showOn: "button",
            buttonImage: "/Content/Images/calendar.png",
        });
        ActiveMenu("liCustomerData");
        if ('@Model.IsSelfEnabled' == 'True') {
            LoadSelfGrid();
        }
        if ('@Model.IsBankEnabled' == 'True') {
            LoadBankGrid();
        }
        if ('@Model.IsSelfEnabled' == "False") {
            $("#nav-profile-tab").addClass("active");
            $("#nav-Banks").removeClass('fade');
            $("#nav-Banks").addClass('active');
        }
        $("#loader").hide();
    })

    GetFormattedDate = function (date) {
        var convDate = date;
        var month_names = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

        var day = convDate.getDate();
        var month_index = convDate.getMonth();
        var year = convDate.getFullYear();

        return "" + day + "-" + month_names[month_index] + "-" + year;
    }

    LoadSelfGrid = function () {
        var dataSelf = $.parseJSON($("#hdnSelfCustomerDataList").val());
        var rowList = [];
        var length = Math.ceil(dataSelf.length / 10);
        for (var i = 1; i <= length; i++) {
            rowList.push(i * 10);
        }
        var widthSelfCell = $("#nav-tabContent").width() / 10;
        $("#gridCustomerDataSelf").jqGrid({
            datatype: "local",
            //height: 250,
            colNames: ['S No', 'Date', 'Loan Type', 'Loan ID', 'Name of the Customer', 'Mobile Number', 'Area', 'Loan Amount', 'Rate of Interest', 'Loan Status'],
            colModel: [
                { name: 'sno', index: 'sno', width: (widthSelfCell - 23), sortable: false },
                {
                    name: 'date', index: 'date', width: widthSelfCell, formatter: 'date',
                    formatoptions: { newformat: 'd-M-Y' }
                },
                { name: 'loanType', index: 'loanType', width: widthSelfCell, sortable: false },
                { name: 'loanId', index: 'loanId', width: widthSelfCell, sortable: false },
                { name: 'name', index: 'name', width: widthSelfCell, sortable: false },
                { name: 'number', index: 'number', width: widthSelfCell, sortable: false },
                { name: 'area', index: 'area', width: widthSelfCell, sortable: false },
                { name: 'loanAmount', index: 'loanAmount', width: widthSelfCell, sortable: false },
                { name: 'interest', index: 'interest', width: widthSelfCell, sortable: false },
                { name: 'loanStatus', index: 'loanStatus', width: widthSelfCell, sortable: false },
            ],
            multiselect: true,
            height: 'auto',
            width: 'auto',
            viewrecords: true,
            loadonce: true,
            rowNum: 10,
            rowList: rowList,
            pager: $("#divPagerSelf"),
            //imgpath: '~/Content/themes/base/images/',
            //caption: "Customer Loan Data"
        });

        var mydata = [];
        for (var i = 0; i < dataSelf.length; i++) {
            //var date = GetFormattedDate(new Date(parseInt(data[i].Date.substr(6))));
            mydata.push({
                sno: i + 1,
                date: dataSelf[i].Date,
                loanType: dataSelf[i].BankName,
                loanId: dataSelf[i].LoanId,
                name: dataSelf[i].CustomerName,
                number: dataSelf[i].MobileNumber,
                area: dataSelf[i].Area,
                loanAmount: dataSelf[i].LoanAmount,
                interest: (dataSelf[i].LoanId == null ? "" : dataSelf[i].InterestRate),
                loanStatus: (dataSelf[i].IsActive == true ? "Active" : "Settled")
            })
        }
        for (var i = 0; i <= mydata.length; i++)
            $("#gridCustomerDataSelf").jqGrid('addRowData', i + 1, mydata[i]);
        $("#gridCustomerDataSelf").trigger('reloadGrid');
    }

    LoadBankGrid = function () {
        var dataBank = $.parseJSON($("#hdnBankCustomerDataList").val());
        var rowList = [];
        var length = Math.ceil(dataBank.length / 10);
        for (var i = 1; i <= length; i++) {
            rowList.push(i * 10);
        }
        var widthBankCell = ($("#nav-tabContent").width() + 30) / 6;
        $("#gridCustomerDataBank").jqGrid({
            datatype: "local",
            //height: 250,
            colNames: ['','S No', 'Date', 'Loan Type', 'Name of the Customer', 'Mobile Number', 'Loan Status'],
            colModel: [
                { name: 'loanId', index: 'loanId', width: 0, sortable: false },
                { name: 'sno', index: 'sno', width: (widthBankCell - 30), sortable: false },
                {
                    name: 'date', index: 'date', width: widthBankCell, formatter: 'date',
                    formatoptions: { newformat: 'd-M-Y' }
                },
                { name: 'loanType', index: 'loanType', width: widthBankCell, sortable: false },
                //{ name: 'loanId', index: 'loanId', width: 100, sortable: false },
                { name: 'name', index: 'name', width: widthBankCell, sortable: false },
                { name: 'number', index: 'number', width: widthBankCell, sortable: false },
                //{ name: 'area', index: 'area', width: 150, sortable: false },
                //{ name: 'loanAmount', index: 'loanAmount', width: 100, sortable: false },
                //{ name: 'interest', index: 'interest', width: 90, sortable: false },
                { name: 'loanStatus', index: 'loanStatus', width: (widthBankCell - 30), sortable: false },
            ],
            multiselect: true,
            height: 'auto',
            width: 'auto',
            viewrecords: true,
            loadonce: true,
            rowNum: 10,
            rowList: rowList,
            pager: $("#divPagerBank")
        });

        var mydataBank = [];
        for (var i = 0; i < dataBank.length; i++) {
            //var date = GetFormattedDate(new Date(parseInt(data[i].Date.substr(6))));
            mydataBank.push({
                loanId: dataBank[i].LoanId,
                sno: i + 1,
                date: dataBank[i].Date,
                loanType: dataBank[i].BankName,
                //loanId: dataBank[i].LoanId,
                name: dataBank[i].CustomerName,
                number: dataBank[i].MobileNumber,
                //area: dataBank[i].Area,
                //loanAmount: dataBank[i].LoanAmount,
                //interest: (dataBank[i].LoanId == null ? "" : dataBank[i].InterestRate),
                loanStatus: (dataBank[i].IsActive == true ? "Active" : "Settled")
            })
        }
        for (var i = 0; i <= mydataBank.length; i++)
            $("#gridCustomerDataBank").jqGrid('addRowData', i + 1, mydataBank[i]);
        $("#gridCustomerDataBank").trigger('reloadGrid');
        var grid = $("#gridCustomerDataBank");
        grid.jqGrid('hideCol', grid.getGridParam("colModel")[1].name);
    }
    DeleteBankRecords = function () {
        var selectedIds = [];
        var bankGrid = $("#gridCustomerDataBank");
        var i, selRowIds = bankGrid.jqGrid("getGridParam", "selarrrow"), n, rowData;
        for (i = 0, n = selRowIds.length; i < n; i++) {
            rowData = bankGrid.jqGrid("getLocalRow", selRowIds[i]);
            selectedIds.push(rowData.loanId);
        }
        if (selectedIds != []) {
            var Url = "/Apraiser/DeleteBankRecords";
            $.ajax({
                url: Url,
                type: "GET",
                cache: false,
                dataType: 'json',
                data: {
                    'selectedIds' : JSON.stringify(selectedIds)
                },
                success: function (data) {
                   
                    $("#gridCustomerDataBank").clearGridData()
                    $("#hdnBankCustomerDataList").val(JSON.stringify(data.bankCustomerDataList));
                    LoadBankGrid();
                    $("#divMessage").show().delay(5000).fadeOut();
                },
                error: function (error) {

                }
            });
        }
    }
    DeleteSelfRecords = function () {
        var selectedIds = [];
        var selfGrid = $("#gridCustomerDataSelf");
        var i, selRowIds = selfGrid.jqGrid("getGridParam", "selarrrow"), n, rowData;
        for (i = 0, n = selRowIds.length; i < n; i++) {
            rowData = selfGrid.jqGrid("getLocalRow", selRowIds[i]);
            selectedIds.push(rowData.loanId);
        }
        if (selectedIds != []) {
            var Url = "/Apraiser/DeleteSelfRecords";
            $.ajax({
                url: Url,
                type: "GET",
                cache: false,
                dataType: 'json',
                data: {
                    'selectedIds': JSON.stringify(selectedIds)
                },
                success: function (data) {
                   
                    $("#gridCustomerDataSelf").clearGridData();
                    $("#hdnSelfCustomerDataList").val(JSON.stringify(data.selfCustomerDataList));
                    LoadSelfGrid();
                    $("#divMessage").show().delay(5000).fadeOut();
                },
                error: function (error) {

                }
            });
        }
    }

    FilterActive = function () {
        if ($("#txtStartDate").val() != "" && $("#txtEndDate").val() != "") {
            $("#btnFilter").prop('disabled', false);
            $("#btnFilterClear").prop('disabled', false);
        } else {
            $("#btnFilter").prop('disabled', true);
            $("#btnFilterClear").prop('disabled', true);
        }
    }

    CleareFilters = function () {
        $("#txtStartDate").val("");
        $("#txtEndDate").val("");
    }

    ReloadData = function () {
        if ($("#txtStartDate").val() != "" && $("#txtEndDate").val() != "") {
            $("#txtStartDate").val("");
            $("#txtEndDate").val("");
            var Url = "/Apraiser/ReloadData";
            $.ajax({
                url: Url,
                type: "GET",
                cache: false,
                dataType: 'json',
                success: function (data) {
                    $("#gridCustomerDataBank").clearGridData()
                    $("#hdnBankCustomerDataList").val(JSON.stringify(data.bankCustomerDataList));
                    LoadBankGrid();
                    $("#gridCustomerDataSelf").clearGridData();
                    $("#hdnSelfCustomerDataList").val(JSON.stringify(data.selfCustomerDataList));
                    LoadSelfGrid();
                },
                error: function (error) {

                }
            });
        }
    }

    FilterLoans = function () {
        var loanType = $("#nav-PawnBroker").hasClass("active") == true ? "Self" : "Bank";
        var Url = "/Apraiser/FilterLoans";
        if ($("#txtStartDate").val() != "" && $("#txtEndDate").val() != "") {
            $.ajax({
                url: Url,
                type: "GET",
                cache: false,
                dataType: 'json',
                data: {
                    'LoanType': loanType, 'StartDate': $("#txtStartDate").val(), 'EndDate': $("#txtEndDate").val()
                },
                success: function (data) {
                    
                    if (loanType == "Bank") {
                        $("#gridCustomerDataBank").clearGridData()
                        $("#hdnBankCustomerDataList").val(JSON.stringify(data.bankCustomerDataList));
                        LoadBankGrid();
                    } else {
                        $("#gridCustomerDataSelf").clearGridData();
                        $("#hdnSelfCustomerDataList").val(JSON.stringify(data.selfCustomerDataList));
                        LoadSelfGrid();
                    }

                },
                error: function (error) {

                }
            });
        }
    }
</script>
