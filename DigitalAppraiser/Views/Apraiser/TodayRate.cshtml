@model DigitalAppraiser.Models.ViewModels.TodayRateModel

@{
    ViewBag.Title = "Today Rate";
    Layout = "~/Views/Shared/_AppraiserLayout.cshtml";
}
<style>
    .login-form {
        margin-top: 10px;
        box-shadow: 0px 0px 10px 1px grey;
        border-radius: 5px;
        padding-bottom: 20px;
        background: white;
    }

    .title {
        background: #007bbf;
        padding: 10px;
        text-align: center;
        color: #fff;
        border-radius: 0px 0px 10px 10px;
    }

    .error {
        color: red;
    }
</style>

<div class="container">
    <div class="login-form col-md-6 offset-md-3 col-sm-8 offset-sm-2 col-8 offset-2 col-lg-4 offset-lg-4">
        <h1 class="title"> Today Rate </h1>
        @using (Html.BeginForm("TodayRate", "Apraiser", FormMethod.Post))
        {
            <input type="hidden" id="hdnTodayRates" value="@Json.Encode(Model)" />
            <form>
                <div class="form-group">
                    <label>Date<span style="color:red">*</span></label>
                    <input type="text" id="txtDate" class="form-control" disabled />
                </div>
                @for (int i = 0; i < Model.TodayRates.Count; i++)
                {
                    @Html.HiddenFor(x=>x.TodayRates[i].AppraiserId)
                    @Html.HiddenFor(x=>x.TodayRates[i].BankId)
                    @Html.HiddenFor(x=>x.TodayRates[i].Id)
                   
                    <div class="form-group">
                        <label>@Model.AllBanks.Where(x => x.BankId == Model.TodayRates[i].BankId).FirstOrDefault().BankName Rate<span style="color:red">*</span>:</label><br />

                        @Html.TextBoxFor(x => x.TodayRates[i].Rate, new { id = "txtRate" + i, @class = "form-control", @onkeypress = "return IsNumeric(event,$(this))", autocomplete = "off" })
                        @Html.ValidationMessageFor(x => x.TodayRates[i].Rate, "", new { @class = "error" })
                    </div>

                }
                <input type="submit" class="btn btn-info" id="btnSaveTodatRate" value="Continue" />
            </form>
        }
    </div>
    @*</div>
        <input type="hidden" id="hdnTodayRates" value="@Json.Encode(Model)" />
        <div class="col-sm-offset-2 panel panel-default col-sm-8" style="padding:0px">
            <div class="panel-heading" style="background-color: #33719b;color: #fff;font-size: 20px;font-weight:bold;">
                Today Rate
            </div>
            <br />
            <section class="col-md-8 offset-md-2 col-sm-10 offset-sm-1 col-10 offset-1 col-lg-8 offset-lg-2">
            </section>
            <div class="col-sm-offset-2 panel-body">
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Date<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <input type="text" id="txtDate" class="form-control" disabled />
                        </div>
                    </div>
                </div>
                @{

                    for (int i = 0; i < Model.TodayRates.Count; i++)
                    {
                        //if (Model.TodayRates[i].BankId != 1)
                        //{
                        <div class="col-sm-8">
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label class="text-info">@Model.AllBanks.Where(x => x.BankId == Model.TodayRates[i].BankId).FirstOrDefault().BankName Rate<span style="color:red">*</span>:</label><br />
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.TodayRates[i].Rate, new { id = "txtRate" + i, @class = "form-control", @onkeypress = "return IsNumeric(event,$(this))", autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                        //}
                    }
                }
                <input type="button" class="btn btn-info btn-md col-sm-offset-3" id="btnSaveTodatRate" value="Continue" onclick="SaveTodayRate()" />

                <div id="divError" class="alert alert-danger col-sm-8" style="display:none;margin-top:1%;">
                    <span id="spnError"> </span>
                </div>
                <div id="divSuccess" class="alert alert-success col-sm-8" style="display:none;margin-top:1%;">

                </div>
            </div>*@
</div>
<script>
    $(document).ready(function () {
        $("#txtDate").datepicker({ dateFormat: "dd-M-yy" }).datepicker("setDate", new Date());
        $("#divError").hide();
        $("#spnUserName").text()
        ActiveMenu("liTodayRate");
    })

    IsNumeric = function (evt, element) {
        //if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //    e.preventDefault()
        //}

        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57) && !(charCode == 46 || charCode == 8 || charCode == 45))
            return false;
        else {
            var len = $(element).val().length;
            // Validation Point
            var index = $(element).val().indexOf('.');
            if (index > -1 && charCode == 46) {
                return false;
            }
            if (index > 0 || index == 0) {
                var CharAfterdot = (len + 1) - index;
                if (CharAfterdot > 5) {
                    return false;
                }
            }

            // Validating Negative sign
            index = $(element).val().indexOf('-');
            if (index = '-1' && charCode == 45) {
                return false;
            }
        }
        return true;
    }
    SaveTodayRate = function () {
        var isValid = true;
        var errorMsg = "";
        var list = $.parseJSON($("#hdnTodayRates").val());
        for (var i = 0; i < list.TodayRates.length; i++) {
            if ($("#txtRate" + i).val() == 0) {
                errorMsg = "Please fill all mandatory fields.";
                isValid = false;
                break;
            } else {
                list.TodayRates[i].Rate = $("#txtRate" + i).val();
            }
        }
        if (isValid == true) {
            $.ajax({
                url: "/Apraiser/SaveTodayRate",
                type: "POST",
                cache: false,
                data: { model: list },
                success: function (data) {
                    if (data.message == "Save success") {
                        //$("#divSuccess").html("Todays Rate saved successfully");
                        //$("#divSuccess").show();
                        window.location.href = "/Apraiser/ProcessLoan";
                    } else if (data.message == "Update Success") {
                        //$("#divSuccess").html("Todays Rate updated successfully");
                        //$("#divSuccess").show();
                        window.location.href = "/Apraiser/ProcessLoan";
                    } else {
                        $("#spnError").text("Todays Rate save failed try again.");
                        $("#divError").show();
                    }
                },
                error: function (error) {

                }
            })
        }
        else {
            $("#spnError").text(errorMsg);
            $("#divError").show();
        }
    }
</script>
