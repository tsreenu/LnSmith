@model DigitalAppraiser.Models.ViewModels.BankCustomerModel

@using (Html.BeginForm("BankCustomer", "Apraiser", FormMethod.Post, new { id = "formCustomerBank" }))
{
    @*@Html.HiddenFor(x => x.BankId, new { id = "hdnBankId" })*@
    @*@Html.HiddenFor(x=>x.Banks)*@

    <div class="col-12 col-sm-12 col-md-12 col-lg-12 row">
        <div class="col-12 col-sm-12 col-md-6 col-lg-6" style="width:50%;">
            <h3 class="h3 text-center"> Customer Details</h3>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Bank<span style="color:red">*</span></label>
                @Html.DropDownListFor(x => x.selectedBank, Model.Banks, "Select", new { id = "txtBank", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6 width100", @onkeypress = "IsNumeric(event)", @maxlength = "12" })
                @Html.ValidationMessageFor(x => x.selectedBank, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Branch<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.bankCustomer.Branch, new { id = "txtBranch", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.bankCustomer.Branch, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Name<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.bankCustomer.Name, new { id = "txtName", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.bankCustomer.Name, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Relation Type<span style="color:red">*</span></label>
                @Html.DropDownListFor(x => x.bankCustomer.RelationType, Model.RelationTypes, "Select", new { id = "txtRelationType", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6 width100" })
                @Html.ValidationMessageFor(x => x.bankCustomer.RelationType, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Relation Name<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.bankCustomer.RelationName, new { id = "txtRelationName", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6"})
                @Html.ValidationMessageFor(x => x.bankCustomer.RelationName, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Address<span style="color:red">*</span></label>
                @Html.TextAreaFor(x => x.bankCustomer.Address, new { id = "txtAddress", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.bankCustomer.Address, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Mobile Number<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.bankCustomer.MobileNumber, new { id = "txtMobileNumber", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", @maxlength = "10", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.bankCustomer.MobileNumber, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
        </div>
        <div class="col-12 col-sm-12 col-md-6 col-lg-6">
            <h3 class="h3 text-center"> Ornament Details</h3>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Ornament<span style="color:red">*</span></label>
                @Html.TextAreaFor(x => x.ornamentDetails.Ornament, new { id = "txtOrnament", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.Ornament, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Quantity<span style="color:red">*</span></label>
                @Html.DropDownListFor(x => x.ornamentDetails.Quantity, Model.Quantity, "Select", new { id = "ddQuantity", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6 width100" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.Quantity, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Gross weight in grams<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.GrossWeight, new { id = "txtGrossWeight", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.GrossWeight, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Stone weight in grams<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.StoneWeight, new { id = "txtStoneWeight", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.StoneWeight, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Net weight in grams<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.NetWeight, new { id = "txtNetWeight", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.NetWeight, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Market Price<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.MarketPrice, new { id = "txtMarketPrice", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.MarketPrice, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group offset-6 offset-sm-6 offset-md-4 offset-lg-4 col-6 col-sm-6 col-md-6 col-lg-6">
                <a class="btn btn-primary" href="/Apraiser/ProcessLoan">Cancel</a>&nbsp;&nbsp;
                <input type="submit" class="btn btn-primary float-right" value="Submit" />
            </div>
        </div>
    </div>
}
@*<div class="panel-heading" style="background-color: #33719b;color: #fff;font-size: 20px;font-weight:bold;">
        Customer Details
    </div>
    <br />
    <div class="panel-body">
        @using (Html.BeginForm("BankCustomer", "Apraiser", FormMethod.Post, new { id = "formCustomerBank" }))
        {
            @Html.HiddenFor(x => x.BankId, new { id = "hdnBankId" })
            <div class="col-sm-offset-1">
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Branch<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Branch, new { id = "txtBranch", @class = "form-control", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Name<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Name, new { id = "txtNameBank", @class = "form-control", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Relation Type<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.DropDownListFor(x => x.RelationType, Model.RelationTypes, "Select", new { id = "ddRelationType", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Relation Name<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.RelationName, new { id = "txtRelationName", @class = "form-control", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Address<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextAreaFor(x => x.Address, new { id = "txtAddressBank", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Mobile Number<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.MobileNumber, new { id = "txtMobileBank", @class = "form-control", @onkeypress = "IsNumeric(event)", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <input type="submit" class="btn btn-info btn-md col-sm-offset-3" id="btnSaveCustomerBank" value="Continue" onclick="SaveCustomerBank(event)" />
                <div id="divError" class="alert alert-danger col-sm-8" style="display:none">

                </div>
            </div>
        }
    </div>*@
<script>
    $(document).ready(function () {
        //$("#txtDateSelf").datepicker({ dateFormat: "dd-mm-yy" }).datepicker("setDate", new Date());
    })
    IsNumeric = function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            e.preventDefault()
        }
    }
    SaveCustomerBank = function () {
        debugger;
        var isValid = true;
        var errorMsg = "";
        if ($("#txtBranch").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        } if ($("#txtNameBank").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }
        if ($("#ddRelationType").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }
        if ($("#txtRelationName").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }
        if ($("#txtMobileBank").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }
        if ($("#txtAddressBank").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }

        if (isValid == true) {
            //$("#formCustomerBank").bind("submit");
            $("#formCustomerBank").submit(function (e) {
                e.currentTarget.submit();
            });
        } else {
            $("#formCustomerBank").submit(function (e) {
                e.preventDefault();
            });
            $("#divError").html(errorMsg);
            $("#divError").show();
        }
    }
</script>
