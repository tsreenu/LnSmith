@model DigitalAppraiser.Models.ViewModels.SelfCustomerModel

@using (Html.BeginForm("SelfCustomer", "Apraiser", FormMethod.Post, new { id = "formCustomerSelf" }))
{
    <input type="hidden" id="hdnTodayRate" value="@Json.Encode(ViewBag.TodayRate)" />
    <div class="col-12 col-sm-12 col-md-12 col-lg-12 row">
        <div class="col-12 col-sm-12 col-md-6 col-lg-6" style="width:50%;">
            <h3 class="h3 text-center"> Customer Details</h3>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Date<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.selfCustomer.CreatedOn, new { id = "txtCreatedOn", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.selfCustomer.CreatedOn, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Name<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.selfCustomer.Name, new { id = "txtName", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.selfCustomer.Name, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Aadhar</label>
                @Html.TextBoxFor(x => x.selfCustomer.UANNumber, new { id = "txtUANNumber", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", @onkeypress = "IsNumeric(event)", @maxlength = "12" })
                @Html.ValidationMessageFor(x => x.selfCustomer.UANNumber, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Mobile Number<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.selfCustomer.MobileNumber, new { id = "txtMobileNumber", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", @maxlength = "10", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.selfCustomer.MobileNumber, "", new { @class = "error col-6 offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="offset-md-1 offset-lg-1 col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Address<span style="color:red">*</span></label>
                @Html.TextAreaFor(x => x.selfCustomer.Address, new { id = "txtAddress", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.selfCustomer.Address, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
        </div>
        <div class="col-12 col-sm-12 col-md-6 col-lg-6">
            <h3 class="h3 text-center"> Ornament Details</h3>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Ornament<span style="color:red">*</span></label>
                @Html.TextAreaFor(x => x.ornamentDetails.Ornament, new { id = "txtOrnament", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.Ornament, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Quantity<span style="color:red">*</span></label>
                @Html.DropDownListFor(x => x.ornamentDetails.Quantity, Model.Quantity, "Select", new { id = "ddQuantity", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6 width100" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.Quantity, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Gross weight in grams<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.GrossWeight, new { id = "txtGrossWeight", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", onblur = "CalculateNetWeightAndPrice()", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.GrossWeight, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Stone weight in grams</label>
                @Html.TextBoxFor(x => x.ornamentDetails.StoneWeight, new { id = "txtStoneWeight", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", onblur = "CalculateNetWeightAndPrice()", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.StoneWeight, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Net weight in grams<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.NetWeight, new { id = "txtNetWeight", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6", onblur = "CalculateNetWeightAndPrice()", @onkeypress = "IsNumeric(event)" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.NetWeight, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group form-inline">
                <label class="col-6 col-sm-6 col-md-4 col-lg-4 flexLeft">Market Price<span style="color:red">*</span></label>
                @Html.TextBoxFor(x => x.ornamentDetails.MarketPrice, new { id = "txtMarketPrice", @class = "form-control col-6 col-sm-6 col-md-6 col-lg-6" })
                @Html.ValidationMessageFor(x => x.ornamentDetails.MarketPrice, "", new { @class = "error offset-6 offset-sm-6 offset-md-6 offset-lg-6" })
            </div>
            <div class="form-group offset-6 offset-sm-6 offset-md-4 offset-lg-4 col-6 col-sm-6 col-md-6 col-lg-6">
                <a class="btn btn-primary" href="/Apraiser/ProcessLoan">Cancel</a>&nbsp;&nbsp;
                <input type="submit" class="btn btn-primary float-right" value="Submit" />
            </div>
        </div>
    </div>
}



@*<div class="panel-heading" style="background-color: #33719b;color: #fff;font-size: 20px;font-weight:bold;">
        Customer Details
    </div>
    <br />
    <div class="panel-body">
        @using (Html.BeginForm("SelfCustomer", "Apraiser", FormMethod.Post, new { id = "formCustomerSelf" }))
        {
            <div class="col-sm-offset-1">
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Date<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <input type="text" id="txtDateSelf" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Name<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Name, new { id = "txtNameSelf", @class = "form-control", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Aadhar:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.UANNumber, new { id = "txtUANSelf", @class = "form-control", @onkeypress = "IsNumeric(event)", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Mobile Number<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.MobileNumber, new { id = "txtMobileSelf", @class = "form-control", @onkeypress = "IsNumeric(event)", autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="text-info">Address<span style="color:red">*</span>:</label><br />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.TextAreaFor(x => x.Address, new { id = "txtAddressSelf", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <input type="submit" class="btn btn-info btn-md col-sm-offset-3" id="btnSaveCustomerSelf" value="Continue" onclick="SaveCustomerSelf(event)" />
                <div id="divError" class="alert alert-danger col-sm-8" style="display:none">

                </div>
            </div>
        }
    </div>*@
<script>
    $(document).ready(function () {
        var TodayRate = $.parseJSON($("#hdnTodayRate").val());
        $("#txtCreatedOn").datepicker({ dateFormat: "dd-M-yy" }).datepicker("setDate", new Date());
        ActiveMenu("liProcessLoan");
        $("#loader").hide();
    })
    IsNumeric = function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            e.preventDefault()
        }
    }
    CalculateNetWeightAndPrice = function () {
        debugger;
        //var TodayRate = $.parseJSON($("#hdnTodayRate").val());
        var netWt = 0;
        var marketPrice = 0;
        var grossWt = $("#txtGrossWeight").val() == "" ? 0 : $("#txtGrossWeight").val();
        var stoneWt = $("#txtStoneWeight").val() == "" ? 0 : $("#txtStoneWeight").val();
        var quality = $("#txtQuality").val() == "" ? 1 : $("#txtQuality").val();
        if ($("#txtQuality").val() != "") {
            if (TodayRate.BankId == 1) {
                netWt = (grossWt - stoneWt) * (quality / 100);

                marketPrice = netWt * TodayRate.Rate;
            } else {
                var s = (grossWt - stoneWt) * (quality / 100);
                netWt = s + ((s * 8) / 100);
                marketPrice = netWt * TodayRate.Rate;
            }
            $("#txtNetWeight").val(netWt.toFixed(3));
            $("#txtMarketPrice").val(marketPrice.toFixed(2));
        }
    }
    SaveCustomerSelf = function () {
        var isValid = true;
        var errorMsg = "";
        if ($("#txtNameSelf").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }
        //if ($("#txtUANSelf").val() == "") {
        //    errorMsg = "Please fill all amndatory fields."
        //    isValid = false;
        //}
        if ($("#txtMobileSelf").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }
        if ($("#txtAddressSelf").val() == "") {
            errorMsg = "Please fill all amndatory fields."
            isValid = false;
        }

        if (isValid == true) {
            //$("#formCustomerSelf").bind("submit");
            $("#formCustomerSelf").submit(function (e) {
                e.currentTarget.submit();
            });
        } else {
            $("#formCustomerSelf").submit(function (e) {
                e.preventDefault();
            });
            //$("#formCustomerSelf").submit(false);
            $("#divError").html(errorMsg);
            $("#divError").show();
        }
    }
</script>


