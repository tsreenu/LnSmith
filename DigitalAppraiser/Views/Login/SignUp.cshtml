@model DigitalAppraiser.Models.ViewModels.SignUpModel

@{
    Layout = null;
    ViewBag.Title = "Signup";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SignUp</title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/js/bootstrap-select.min.js"></script>


    <style>
        body {
            background-image: url('../../Content/Images/background1.jpg');
            background-size: cover;
        }

        .login-form {
            margin-top: 10px;
            box-shadow: 0px 0px 10px 1px grey;
            border-radius: 5px;
            padding-bottom: 20px;
            background: white;
        }

        .title {
            background: #007bbf;
            padding: 10px;
            text-align: center;
            color: #fff;
            border-radius: 0px 0px 10px 10px;
        }

        .error {
            color: red;
        }
    </style>
</head>

<body>


    <div class="container">
        <div class="login-form col-md-8 offset-md-2 col-sm-10 offset-sm-1 col-10 offset-1 col-lg-8 offset-lg-2">
            @if (Model.AppraiserId != 0)
            {
                <h1 class="title"> Settings </h1>
            }
            else
            {
                <h1 class="title"> SignUp </h1>
            }
            @using (Html.BeginForm("SignUp", "Login", FormMethod.Post))
            {
                <form>
                    @Html.HiddenFor(x => x.AppraiserId, new { id = "hdnApraiserId" })
                    @Html.HiddenFor(x => x.StateId, new { id = "hdnStateId" })
                    @Html.HiddenFor(x => x.CityId, new { id = "hdnCityId" })
                    @Html.HiddenFor(x => x.Banks)
                    @Html.HiddenFor(x => x.States)
                    <input type="hidden" id="hdnSelectedBanks" value="@Json.Encode(Model.selectedBanks)" />
                    <input type="hidden" id="hdnBanks" value="@Json.Encode(Model.Banks)" />
                    <input type="hidden" id="hdnStates" value="@Json.Encode(Model.States)" />
                    @Html.HiddenFor(x => x.IsSelfLoan, new { id = "hdnIsSelfLoan" })
                    <div class="form-group form-inline">
                        <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Name<span style="color:red">*</span></label>
                        @Html.TextBoxFor(x => x.AppraiserName, new { id = "txtAppraiserName", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5", @onkeypress = "IsName(event)" })
                        @Html.ValidationMessageFor(x => x.AppraiserName, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                    </div>
                    <div class="form-group form-inline">
                        <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Appraiser Number</label>
                        @Html.TextBoxFor(x => x.AppraiserNumber, new { id = "txtAppraiserNumber", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                        @Html.ValidationMessageFor(x => x.AppraiserNumber, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                    </div>
                    <div class="form-group form-inline">
                        <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Mobile Number<span style="color:red">*</span></label>
                        @Html.TextBoxFor(x => x.MobileNumber, new { id = "txtMobileNumber", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5", @onkeypress = "IsNumeric(event)", @maxlength = "10", autocomplete = "off" })
                        @Html.ValidationMessageFor(x => x.MobileNumber, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                    </div>
                    @if (Model.AppraiserId != 0)
                    {
                    }
                    else
                    {
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Password<span style="color:red">*</span></label>
                            @Html.PasswordFor(x => x.Password, new { id = "txtMobileNumber", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                            @Html.ValidationMessageFor(x => x.Password, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                        </div>
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Confirm Password<span style="color:red">*</span></label>
                            @Html.PasswordFor(x => x.ConfirmPassword, new { id = "txtConfirmPassword", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                            @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                        </div>
                    }
                    <div class="form-group form-inline">
                        <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">State<span style="color:red">*</span></label>
                        @Html.DropDownListFor(x => x.StateId, Model.StatesList, "Select", new { id = "ddStates", @onchange = "BindCities(this)", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                        @Html.ValidationMessageFor(x => x.StateId, "", new { @class = "error offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                    </div>
                    <div class="form-group form-inline">
                        <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">City<span style="color:red">*</span></label>
                        @Html.DropDownListFor(x => x.CityId, Model.CitiesList, new { id = "ddCity", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                        @Html.ValidationMessageFor(x => x.CityId, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                    </div>
                    <div class="form-group form-inline">
                        <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Bank<span style="color:red">*</span></label>
                        @Html.DropDownListFor(x => x.selectedBanks, Model.bankList, "Select", new { id = "ddBanks", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5", @onchange = "ChangeBank(this)", @multiple = "multiple" })
                        @Html.ValidationMessageFor(x => x.selectedBanks, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                    </div>
                    <div id="divShopDetails" style="display:none;">
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5 text-left">Shop Name<span style="color:red">*</span></label>
                            @Html.TextBoxFor(x => x.ShopName, new { id = "txtShopName", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                            @Html.ValidationMessageFor(x => x.ShopName, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                        </div>
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Shop Address</label>
                            @Html.TextBoxFor(x => x.ShopAddress, new { id = "txtShopAddress", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                            @Html.ValidationMessageFor(x => x.ShopAddress, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                        </div>
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Shop Phone Number</label>
                            @Html.TextBoxFor(x => x.ShopNumber, new { id = "txtShopNumber", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5", @onkeypress = "IsNumeric(event)" })
                            @Html.ValidationMessageFor(x => x.ShopNumber, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                        </div>
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5">Note</label>
                            @Html.TextBoxFor(x => x.Note, new { id = "txtShopNumber", @class = "form-control col-lg-5 col-md-5 col-sm-5 col-5" })
                            @Html.ValidationMessageFor(x => x.Note, "", new { @class = "error  offset-5 offset-sm-5 offset-md-5 offset-lg-5" })
                        </div>
                    </div>
                    @if (Model.AppraiserId != 0)
                    {
                    }
                    else
                    {
                        <div class="form-group form-inline">
                            <label class="text-info col-lg-5 col-md-5 col-sm-5 col-5"><input id="chkTermsAndCondtions" type="checkbox" /> &nbsp; Terms and conditions </label>
                            <span style="color:#6495ed;font-weight:bold;font-size:17px;">Enjoy your 30 days free trail!</span>
                        </div>
                    }
                    <div class="form-group form-inline">

                    </div>

                    <div class="form-group form-inline offset-5 offset-sm-5 offset-md-5 offset-lg-5">
                        <a class="btn btn-primary" href="javascript:void(0)" onclick="goBack()">Cancel</a>&nbsp;&nbsp;
                        <input type="submit" class="btn btn-primary offset-md-2 offset-lg-4" value="Submit" />
                    </div>

                </form>
            }
        </div>
    </div>
</body>
</html>
<script>
    var banks = $.parseJSON($("#hdnBanks").val());
    $(document).ready(function () {
        $("#divError").hide();
        var isSelf = false;
        if ($("#hdnIsSelfLoan").val() == "true") {
            $("#divShopDetails").show();
        }
        $("#ddBanks option").each(function () {
            if ($(this).val() != 1 && $(this).val() != 2) {
                $(this).prop("disabled", true);
            }
        });
        $('#ddBanks').selectpicker();

        if ($("#hdnApraiserId").val() != "0") {
            $("#ddStates").val($("#hdnStateId").val());
            $("#ddStates").trigger("change");
            var selectedBanks = $.parseJSON($("#hdnSelectedBanks").val());
            $('#ddBanks').val(selectedBanks);
            // $('#ddBanks').multiselect('refresh');
            $('#ddBanks').trigger("change");
            $("#ddCity").val($("#hdnCityId").val())
            //$("#chkTermsAndCondtions")[0].checked = true;
            //$("#txtPassword").prop("disabled", true);
            //$("#txtConfirmPwd").prop("disabled", true);
        }
    });
    IsName = function (e) {
        var isValid = false;
        var regex = /^[a-zA-Z\. ]*$/;
        isValid = regex.test(e.key);
        if (isValid == false) {
            e.preventDefault()
            return isValid;
        }
    }
    IsNumeric = function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            e.preventDefault()
        }
    }
    BindCities = function (e) {
        var stateId = e.value;//$("#ddStates").val()
        if (stateId != 0) {
            $.ajax({
                url: '/Login/GetCities',
                data: {
                    stateid: stateId
                },
                type: 'get',
                dataType: "json",
                success: function (data) {
                    var optionString = "<option value='0'>Select</option>";
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            optionString += "<option value='" + data[i].CityId + "'>" + data[i].CityName + "</option>";
                        }
                        $("#ddCity").html(optionString);
                        if ($("#hdnApraiserId").val() != "0") {
                            $("#ddCity").val($("#hdnCityId").val())
                        }
                    }
                }
            })
        } else {
            var optionString = "<option value='0'>Select</option>";
            $("#ddCity").html(optionString);
        }

    }
    ChangeBank = function (e) {
        if (e.selectedOptions.length > 0) {
            for (var i = 0; i < e.selectedOptions.length; i++) {
                if (e.selectedOptions[i].value == 1) {
                    $("#divShopDetails").show();
                    $("#hdnIsSelfLoan").val(true);
                    isSelf = true;
                    return false;
                } else {
                    $("#divShopDetails").hide();
                    $("#hdnIsSelfLoan").val(false);
                    isSelf = false;
                }
            }
        } else {
            $("#divShopDetails").hide();
            isSelf = false;
        }
    }
    SignUp = function () {
        $("#divError").hide();
        var errorMsg = "";
        var ConfirmPwdMsg = "";
        var isValid = true
        if ($("#txtAppraiserName").val() == "") {
            errorMsg = "Please enter name";
            isValid = false;
        }
        //if ($("#txtAppraiserNumber").val() == "") {
        //    errorMsg = errorMsg == "" ? "Please enter appraiser number" : errorMsg + ", appraiser number";
        //    isValid = false;
        //}
        if ($("#txtMobileNumber").val() == "") {
            errorMsg = errorMsg == "" ? "Please enter mobile number" : errorMsg + ", mobile number";
            isValid = false;
        } else if ($("#txtMobileNumber").val().length != 10) {
            errorMsg = errorMsg == "" ? "Please enter valid mobile number" : errorMsg + ", valid mobile number";
            isValid = false;
        }
        if ($("#hdnApraiserId").val() == "0") {
            if ($("#txtPassword").val() == "") {
                errorMsg = errorMsg == "" ? "Please enter password" : errorMsg + ", password";
                isValid = false;
            }
            if ($("#txtConfirmPwd").val() == "") {
                errorMsg = errorMsg == "" ? "Please enter confirm password" : errorMsg + ", confirm password";
                isValid = false;
            }
            if ($("#txtPassword").val() != $("#txtConfirmPwd").val()) {
                errorMsg == "" ? errorMsg = "Password and confirm password is not matching" : ConfirmPwdMsg = "password and confirm password is not matching";
                isValid = false;
            }
        }
        if ($("#txtAddress").val() == "") {
            errorMsg = errorMsg == "" ? "Please enter address" : errorMsg + ", address";
            isValid = false;
        }
        if ($("#ddBanks").val().length == 0) {
            errorMsg = errorMsg == "" ? "Please select atleast one bank" : errorMsg + ", bank";
            isValid = false;
        }
        if ($("#chkTermsAndCondtions")[0].checked == false) {
            errorMsg = errorMsg == "" ? "Please select terms and conditions" : errorMsg + ", terms and conditions";
            isValid = false;
        }
        if ($("#ddStates").val() == 0) {
            errorMsg = errorMsg == "" ? "Please select state" : errorMsg + ", state";
            isValid = false;
        }
        if ($("#ddCity").val() == 0) {
            errorMsg = errorMsg == "" ? "Please select city" : errorMsg + ", city";
            isValid = false;
        }
        if (isValid == false) {
            $("#spnError").text(errorMsg);
            if (ConfirmPwdMsg != "" && $("#txtConfirmPwd").val() != "") {
                $("#spnConfirmPwd").text(ConfirmPwdMsg);
                $("#spnConfirmPwd").show();
            }
            else {
                $("#spnConfirmPwd").hide();
            }
            $("#divError").show();
        } else {
            debugger;
            var bank = [];
            for (var i = 0; i < $("#ddBanks").val().length; i++) {
                var b = banks.filter(x => x.BankId == $("#ddBanks").val()[i]);
                if (b.length > 0) {
                    bank.push(b[0]);
                    if (b[0].BankId == 1) {
                        isSelf = true;
                    }
                }
            }
            var Data = {
                'AppraiserId': 0,
                'AppraiserName': $("#txtAppraiserName").val(),
                'AppraiserNumber': $("#txtAppraiserNumber").val(),
                'MobileNumber': $("#txtMobileNumber").val(),
                'Password': $("#txtPassword").val(),
                'StateId': $("#ddStates").val(),
                'CityId': $("#ddCity").val(),
                'IsSelfLoan': isSelf,
                'ShopName': isSelf == true ? $("#txtShopName").val() : "",
                'ShopAddress': isSelf == true ? $("#txtShopAddress").val() : "",
                'ShopNumber': isSelf == true ? $("#txtShopNumber").val() : "",
                'IsActive': true,
                'Banks': bank
            };

            var url = '/Login/SignUp';
            $.ajax({
                type: "POST",
                url: url,
                //dataType: "json",
                data: {
                    signUpModel: Data, Banks: bank
                },
                cache: false,
                success: function (data) {
                    if (data != null) {
                        if (data == "Mobile number already exists") {
                            $("#spnError").text(data);
                            $("#divError").show();
                        } else {
                            window.location.href = data;
                        }
                    }

                }, error: function (error) {

                }
            })
        }
    }
    function goBack() {
        window.history.back();
    }
</script>